<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
  http://www.springframework.org/schema/integration/xml
  http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
  http://www.springframework.org/schema/rabbit
  http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">

    <bean id="transactionManager" class="org.springframework.integration.transaction.PseudoTransactionManager" />

    <bean id="actionInstructionListenerContainer" class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="queueNames" value="Action.Notify" />
        <property name="channelTransacted" value="true" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <int:channel id="actionInstructionXml" />

    <int-amqp:inbound-channel-adapter id="actionInstructionInboundAmqp" listener-container="actionInstructionListenerContainer" channel="actionInstructionXml" />

    <!-- anything sent to this channel is put on the queue Action.InvalidActionInstructions -->
    <int:channel id="actionInstructionXmlInvalid" />
    <!-- Start of Infrastructure TODO Move in a separate xml file? -->
    <rabbit:queue name="Action.InvalidActionInstructions" durable="true">
    </rabbit:queue>

    <rabbit:direct-exchange name="invalid-action-instruction-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="Action.InvalidActionInstructions" key="Action.InvalidActionInstructions.binding" />
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <!-- End of Infrastructure -->
    <int-amqp:outbound-channel-adapter id="invalidActionFeedbackOutboundAmqp" channel="actionInstructionXmlInvalid" exchange-name="invalid-action-instruction-exchange" />

    <!-- First the SI message provided by the channel adapter is validated against the inbound schema -->
    <!-- Option to be used in Debug/Test: throw-exception-on-rejection="true" -->
    <int-xml:validating-filter id="actionInstructionValidator" input-channel="actionInstructionXml"
                               output-channel="actionInstructionXmlValid" schema-location="classpath:xsd/actionInstruction.xsd" discard-channel="actionInstructionXmlInvalid"/>

    <!-- Secondly the now validated xml is transformed into the jaxb generated object model -->
    <int:channel id="actionInstructionTransformed" datatype="uk.gov.ons.ctp.response.action.message.instruction.ActionInstruction">
    </int:channel>
    <int-xml:unmarshalling-transformer
            input-channel="actionInstructionXmlValid" output-channel="actionInstructionTransformed"
            unmarshaller="actionInstructionMarshaller" />

    <!-- The transformer uses this unmarshaller to do the heavy (un)lifting -->
    <bean id="actionInstructionMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="uk.gov.ons.ctp.response.action.message.instruction" />
    </bean>
    <!-- Finally see the @ServiceActivator(inputChannel="actionInstructionTransformed") -->
</beans>