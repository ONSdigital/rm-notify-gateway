//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.01 at 04:09:47 PM BST 
//


package uk.gov.ons.ctp.response.notify.lib.notify;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.kscs.util.jaxb.Buildable;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;


/**
 * <p>Java class for NotifyRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NotifyRequest"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="reference" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="templateId" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="personalisation" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;choice&gt;
 *           &lt;element name="phoneNumber" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *           &lt;element name="emailAddress" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NotifyRequest", propOrder = {
    "id",
    "reference",
    "templateId",
    "personalisation",
    "emailAddress",
    "phoneNumber"
})
@XmlRootElement(name = "notifyRequest")
public class NotifyRequest {

    @XmlElement(required = true)
    protected String id;
    protected String reference;
    @XmlElement(required = true)
    protected String templateId;
    protected String personalisation;
    protected String emailAddress;
    protected String phoneNumber;

    /**
     * Default no-arg constructor
     * 
     */
    public NotifyRequest() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public NotifyRequest(final String id, final String reference, final String templateId, final String personalisation, final String emailAddress, final String phoneNumber) {
        this.id = id;
        this.reference = reference;
        this.templateId = templateId;
        this.personalisation = personalisation;
        this.emailAddress = emailAddress;
        this.phoneNumber = phoneNumber;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the reference property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReference() {
        return reference;
    }

    /**
     * Sets the value of the reference property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReference(String value) {
        this.reference = value;
    }

    /**
     * Gets the value of the templateId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTemplateId() {
        return templateId;
    }

    /**
     * Sets the value of the templateId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTemplateId(String value) {
        this.templateId = value;
    }

    /**
     * Gets the value of the personalisation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPersonalisation() {
        return personalisation;
    }

    /**
     * Sets the value of the personalisation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPersonalisation(String value) {
        this.personalisation = value;
    }

    /**
     * Gets the value of the emailAddress property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmailAddress() {
        return emailAddress;
    }

    /**
     * Sets the value of the emailAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmailAddress(String value) {
        this.emailAddress = value;
    }

    /**
     * Gets the value of the phoneNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Sets the value of the phoneNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhoneNumber(String value) {
        this.phoneNumber = value;
    }

    /**
     * Copies all state of this object to a builder. This method is used by the {@link #copyOf} method and should not be called directly by client code.
     * 
     * @param _other
     *     A builder instance to which the state of this object will be copied.
     */
    public<_B >void copyTo(final NotifyRequest.Builder<_B> _other) {
        _other.id = this.id;
        _other.reference = this.reference;
        _other.templateId = this.templateId;
        _other.personalisation = this.personalisation;
        _other.emailAddress = this.emailAddress;
        _other.phoneNumber = this.phoneNumber;
    }

    public<_B >NotifyRequest.Builder<_B> newCopyBuilder(final _B _parentBuilder) {
        return new NotifyRequest.Builder<_B>(_parentBuilder, this, true);
    }

    public NotifyRequest.Builder<Void> newCopyBuilder() {
        return newCopyBuilder(null);
    }

    public static NotifyRequest.Builder<Void> builder() {
        return new NotifyRequest.Builder<Void>(null, null, false);
    }

    public static<_B >NotifyRequest.Builder<_B> copyOf(final NotifyRequest _other) {
        final NotifyRequest.Builder<_B> _newBuilder = new NotifyRequest.Builder<_B>(null, null, false);
        _other.copyTo(_newBuilder);
        return _newBuilder;
    }

    /**
     * Copies all state of this object to a builder. This method is used by the {@link #copyOf} method and should not be called directly by client code.
     * 
     * @param _other
     *     A builder instance to which the state of this object will be copied.
     */
    public<_B >void copyTo(final NotifyRequest.Builder<_B> _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final PropertyTree idPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("id"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(idPropertyTree!= null):((idPropertyTree == null)||(!idPropertyTree.isLeaf())))) {
            _other.id = this.id;
        }
        final PropertyTree referencePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("reference"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(referencePropertyTree!= null):((referencePropertyTree == null)||(!referencePropertyTree.isLeaf())))) {
            _other.reference = this.reference;
        }
        final PropertyTree templateIdPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("templateId"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(templateIdPropertyTree!= null):((templateIdPropertyTree == null)||(!templateIdPropertyTree.isLeaf())))) {
            _other.templateId = this.templateId;
        }
        final PropertyTree personalisationPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("personalisation"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(personalisationPropertyTree!= null):((personalisationPropertyTree == null)||(!personalisationPropertyTree.isLeaf())))) {
            _other.personalisation = this.personalisation;
        }
        final PropertyTree emailAddressPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("emailAddress"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(emailAddressPropertyTree!= null):((emailAddressPropertyTree == null)||(!emailAddressPropertyTree.isLeaf())))) {
            _other.emailAddress = this.emailAddress;
        }
        final PropertyTree phoneNumberPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("phoneNumber"));
        if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(phoneNumberPropertyTree!= null):((phoneNumberPropertyTree == null)||(!phoneNumberPropertyTree.isLeaf())))) {
            _other.phoneNumber = this.phoneNumber;
        }
    }

    public<_B >NotifyRequest.Builder<_B> newCopyBuilder(final _B _parentBuilder, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return new NotifyRequest.Builder<_B>(_parentBuilder, this, true, _propertyTree, _propertyTreeUse);
    }

    public NotifyRequest.Builder<Void> newCopyBuilder(final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return newCopyBuilder(null, _propertyTree, _propertyTreeUse);
    }

    public static<_B >NotifyRequest.Builder<_B> copyOf(final NotifyRequest _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        final NotifyRequest.Builder<_B> _newBuilder = new NotifyRequest.Builder<_B>(null, null, false);
        _other.copyTo(_newBuilder, _propertyTree, _propertyTreeUse);
        return _newBuilder;
    }

    public static NotifyRequest.Builder<Void> copyExcept(final NotifyRequest _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
    }

    public static NotifyRequest.Builder<Void> copyOnly(final NotifyRequest _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
    }

    public static class Builder<_B >implements Buildable
    {

        protected final _B _parentBuilder;
        protected final NotifyRequest _storedValue;
        private String id;
        private String reference;
        private String templateId;
        private String personalisation;
        private String emailAddress;
        private String phoneNumber;

        public Builder(final _B _parentBuilder, final NotifyRequest _other, final boolean _copy) {
            this._parentBuilder = _parentBuilder;
            if (_other!= null) {
                if (_copy) {
                    _storedValue = null;
                    this.id = _other.id;
                    this.reference = _other.reference;
                    this.templateId = _other.templateId;
                    this.personalisation = _other.personalisation;
                    this.emailAddress = _other.emailAddress;
                    this.phoneNumber = _other.phoneNumber;
                } else {
                    _storedValue = _other;
                }
            } else {
                _storedValue = null;
            }
        }

        public Builder(final _B _parentBuilder, final NotifyRequest _other, final boolean _copy, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            this._parentBuilder = _parentBuilder;
            if (_other!= null) {
                if (_copy) {
                    _storedValue = null;
                    final PropertyTree idPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("id"));
                    if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(idPropertyTree!= null):((idPropertyTree == null)||(!idPropertyTree.isLeaf())))) {
                        this.id = _other.id;
                    }
                    final PropertyTree referencePropertyTree = ((_propertyTree == null)?null:_propertyTree.get("reference"));
                    if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(referencePropertyTree!= null):((referencePropertyTree == null)||(!referencePropertyTree.isLeaf())))) {
                        this.reference = _other.reference;
                    }
                    final PropertyTree templateIdPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("templateId"));
                    if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(templateIdPropertyTree!= null):((templateIdPropertyTree == null)||(!templateIdPropertyTree.isLeaf())))) {
                        this.templateId = _other.templateId;
                    }
                    final PropertyTree personalisationPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("personalisation"));
                    if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(personalisationPropertyTree!= null):((personalisationPropertyTree == null)||(!personalisationPropertyTree.isLeaf())))) {
                        this.personalisation = _other.personalisation;
                    }
                    final PropertyTree emailAddressPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("emailAddress"));
                    if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(emailAddressPropertyTree!= null):((emailAddressPropertyTree == null)||(!emailAddressPropertyTree.isLeaf())))) {
                        this.emailAddress = _other.emailAddress;
                    }
                    final PropertyTree phoneNumberPropertyTree = ((_propertyTree == null)?null:_propertyTree.get("phoneNumber"));
                    if (((_propertyTreeUse == PropertyTreeUse.INCLUDE)?(phoneNumberPropertyTree!= null):((phoneNumberPropertyTree == null)||(!phoneNumberPropertyTree.isLeaf())))) {
                        this.phoneNumber = _other.phoneNumber;
                    }
                } else {
                    _storedValue = _other;
                }
            } else {
                _storedValue = null;
            }
        }

        public _B end() {
            return this._parentBuilder;
        }

        protected<_P extends NotifyRequest >_P init(final _P _product) {
            _product.id = this.id;
            _product.reference = this.reference;
            _product.templateId = this.templateId;
            _product.personalisation = this.personalisation;
            _product.emailAddress = this.emailAddress;
            _product.phoneNumber = this.phoneNumber;
            return _product;
        }

        /**
         * Sets the new value of "id" (any previous value will be replaced)
         * 
         * @param id
         *     New value of the "id" property.
         */
        public NotifyRequest.Builder<_B> withId(final String id) {
            this.id = id;
            return this;
        }

        /**
         * Sets the new value of "reference" (any previous value will be replaced)
         * 
         * @param reference
         *     New value of the "reference" property.
         */
        public NotifyRequest.Builder<_B> withReference(final String reference) {
            this.reference = reference;
            return this;
        }

        /**
         * Sets the new value of "templateId" (any previous value will be replaced)
         * 
         * @param templateId
         *     New value of the "templateId" property.
         */
        public NotifyRequest.Builder<_B> withTemplateId(final String templateId) {
            this.templateId = templateId;
            return this;
        }

        /**
         * Sets the new value of "personalisation" (any previous value will be replaced)
         * 
         * @param personalisation
         *     New value of the "personalisation" property.
         */
        public NotifyRequest.Builder<_B> withPersonalisation(final String personalisation) {
            this.personalisation = personalisation;
            return this;
        }

        /**
         * Sets the new value of "emailAddress" (any previous value will be replaced)
         * 
         * @param emailAddress
         *     New value of the "emailAddress" property.
         */
        public NotifyRequest.Builder<_B> withEmailAddress(final String emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }

        /**
         * Sets the new value of "phoneNumber" (any previous value will be replaced)
         * 
         * @param phoneNumber
         *     New value of the "phoneNumber" property.
         */
        public NotifyRequest.Builder<_B> withPhoneNumber(final String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        @Override
        public NotifyRequest build() {
            if (_storedValue == null) {
                return this.init(new NotifyRequest());
            } else {
                return ((NotifyRequest) _storedValue);
            }
        }

    }

    public static class Select
        extends NotifyRequest.Selector<NotifyRequest.Select, Void>
    {


        Select() {
            super(null, null, null);
        }

        public static NotifyRequest.Select _root() {
            return new NotifyRequest.Select();
        }

    }

    public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
        extends com.kscs.util.jaxb.Selector<TRoot, TParent>
    {

        private com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> id = null;
        private com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> reference = null;
        private com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> templateId = null;
        private com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> personalisation = null;
        private com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> emailAddress = null;
        private com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> phoneNumber = null;

        public Selector(final TRoot root, final TParent parent, final String propertyName) {
            super(root, parent, propertyName);
        }

        @Override
        public Map<String, PropertyTree> buildChildren() {
            final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
            products.putAll(super.buildChildren());
            if (this.id!= null) {
                products.put("id", this.id.init());
            }
            if (this.reference!= null) {
                products.put("reference", this.reference.init());
            }
            if (this.templateId!= null) {
                products.put("templateId", this.templateId.init());
            }
            if (this.personalisation!= null) {
                products.put("personalisation", this.personalisation.init());
            }
            if (this.emailAddress!= null) {
                products.put("emailAddress", this.emailAddress.init());
            }
            if (this.phoneNumber!= null) {
                products.put("phoneNumber", this.phoneNumber.init());
            }
            return products;
        }

        public com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> id() {
            return ((this.id == null)?this.id = new com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>>(this._root, this, "id"):this.id);
        }

        public com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> reference() {
            return ((this.reference == null)?this.reference = new com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>>(this._root, this, "reference"):this.reference);
        }

        public com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> templateId() {
            return ((this.templateId == null)?this.templateId = new com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>>(this._root, this, "templateId"):this.templateId);
        }

        public com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> personalisation() {
            return ((this.personalisation == null)?this.personalisation = new com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>>(this._root, this, "personalisation"):this.personalisation);
        }

        public com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> emailAddress() {
            return ((this.emailAddress == null)?this.emailAddress = new com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>>(this._root, this, "emailAddress"):this.emailAddress);
        }

        public com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>> phoneNumber() {
            return ((this.phoneNumber == null)?this.phoneNumber = new com.kscs.util.jaxb.Selector<TRoot, NotifyRequest.Selector<TRoot, TParent>>(this._root, this, "phoneNumber"):this.phoneNumber);
        }

    }

}
